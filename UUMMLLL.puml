@startuml
class Main [[java:Main]] {
	+start(primaryStage: Stage): void
	+{static} main(args: String[]): void
}
class Application {
}
Application <|-- Main
class AudibleObject [[java:base.AudibleObject]] {
	-audioPath: String
	-player: MediaPlayer
	-isPlaying: boolean
	-{static} DEFAULT_PAUSE: int
	+AudibleObject(resPath: String, audioPath: String)
	+AudibleObject(resPath: String, audioPath: String, pause: int)
	+playAudio(): void
	+getResPath(): String
	+setResPath(audioPath: String): void
	+getAudioPath(): String
	+getAudioPath(local: boolean): String
	+setAudioPath(audioPath: String): void
	+getMediaPlayer(): MediaPlayer
	+setMediaPlayer(audioPath: String): void
	+setMediaPlayer(audioPath: String, pause: int): void
}
class BaseObject {
}
BaseObject <|-- AudibleObject
class BackgroundAudio [[java:base.BackgroundAudio]] {
	-{static} player: MediaPlayer
	+{static} playAudio(soundFilePath: String): void
	+{static} stopAudio(): void
	+{static} pauseAudio(): void
	+{static} resumeAudio(): void
	+{static} setAudio(volume: double): void
}
class BaseObject [[java:base.BaseObject]] {
	-resPath: String
	+{static} SCENE_WIDTH: int
	+{static} SCENE_HEIGHT: int
	+BaseObject(resPath: String)
	+BaseObject(resPath: String, x: double, y: double)
	+setPosition(x: double, y: double): void
	+onClick(eventHandler: Runnable): void
	+open(): void
	+viewOnly(): void
	+clickOnly(): void
	+close(): void
	+getResPath(): String
	+getResPath(local: boolean): String
	+setResPath(resPath: String): void
}
class Blinker {
}
BaseObject --> "1" Blinker : blinker
class ImageView {
}
ImageView <|-- BaseObject
interface Clickable {
}
Clickable <|.. BaseObject
class BlackScreen [[java:base.BlackScreen]] {
	+BlackScreen()
}
class Rectangle {
}
Rectangle <|-- BlackScreen
class Blinker [[java:base.Blinker]] {
	-{static} FADE_IN_OPACITY: double
	-{static} FADE_OUT_OPACITY: double
	-{static} FADE_IN_DURATION: long
	-{static} FADE_OUT_DURATION: long
	+Blinker()
	-startBlinking(): void
}
class BlackScreen {
}
BlackScreen <|-- Blinker
abstract class BaseScene [[java:base.BaseScene]] {
	#overall: Scene
	#nextScene: Scene
	#heartBeatPlayer: MediaPlayer
	+BaseScene(fileName: String)
	#{abstract} initializeObjects(): void
	#{abstract} setupEventHandlers(): void
	+createBackground(fileName: String): Background
	#startTextFade(text: BaseObject): void
	#toNextScene(scene: BaseScene): void
	-initialHeartBeat(): void
	+getOverall(): Scene
	+setOverall(overall: Scene): void
	+getNextScene(): Scene
	+setNextScene(nextScene: BaseScene): void
	+setBackgroundMusic(backgroundMusic: BackgroundAudio): void
	+getHeartBeatPlayer(): MediaPlayer
	+setHeartBeatPlayer(heartBeatPlayer: MediaPlayer): void
}
class BackgroundAudio {
}
BaseScene --> "1" BackgroundAudio : backgroundMusic
class BackgroundAudio {
}
BaseScene --> "1" BackgroundAudio : getBackgroundMusic()
class Pane {
}
Pane <|-- BaseScene
class FadeEffect [[java:base.FadeEffect]] {
	-{static} FADE_IN_DURATION: double
	+FadeEffect(delay: double)
	+FadeEffect()
	+fadeStart(delay: double): void
}
class BlackScreen {
}
BlackScreen <|-- FadeEffect
interface Clickable [[java:interfaces.Clickable]] {
	open(): void
	viewOnly(): void
	clickOnly(): void
	close(): void
}
class GameLogic [[java:logic.GameLogic]] {
	-{static} gameStage: Stage
	+{static} getStage(): Stage
	+{static} setStage(stage: Stage): void
	+{static} transition(sceneTransitionLogic: Runnable): void
	+{static} transition(sceneTransitionLogic: Runnable, delayMillis: long): void
}
class Scene1_2 [[java:scenes.Scene1_2]] {
	-{static} BG_PATH: String[]
	-chairClicked: boolean
	-windowClicked: boolean
	-ghostAppeared: boolean
	-blinked: boolean
	+Scene1_2()
	#initializeObjects(): void
	#setupEventHandlers(): void
	-handleChairClick(): void
	-handleWindowClick(): void
	-handleBusbellClick(): void
	-checkGhostAppearance(): void
	-sceneBlink(durationSeconds: int): void
	-toggleVisibility(isVisible: boolean): void
}
class AudibleObject {
}
Scene1_2 --> "1" AudibleObject : hands
class AudibleObject {
}
Scene1_2 --> "1" AudibleObject : ghost
class BaseObject {
}
Scene1_2 --> "1" BaseObject : busbell
class BaseObject {
}
Scene1_2 --> "1" BaseObject : chair
class BaseObject {
}
Scene1_2 --> "1" BaseObject : window
class BaseScene {
}
BaseScene <|-- Scene1_2
class SceneStart [[java:scenes.SceneStart]] {
	-{static} BG_PATH: String
	-black: Rectangle
	+SceneStart()
	#initializeObjects(): void
	#setupEventHandlers(): void
}
class BaseScene {
}
BaseScene <|-- SceneStart
class Scene3 [[java:scenes.Scene3]] {
	-{static} BG_PATH: String
	-sceneGuider: int
	-backgroundList: ArrayList<Background>
	+Scene3()
	-initializeBackgrounds(): void
	#initializeObjects(): void
	-createAudibleObject(name: String, sound: String, pause: int): AudibleObject
	-createAudibleObject(name: String, sound: String): AudibleObject
	-createBaseObject(name: String): BaseObject
	-hideObjects(): void
	#setupEventHandlers(): void
	-updateScene(obj: BaseObject, nextState: int, bg: Background, nextObj: BaseObject): void
	-handleUrinalClick(): void
	-handleFaucetClick(): void
	-handleTryMeClick(): void
	-handleCrackClick(): void
	-handleFinalSceneTransition(): void
	-transitionToScene4(): void
}
class BaseObject {
}
Scene3 --> "1" BaseObject : bg1_sink
class BaseObject {
}
Scene3 --> "1" BaseObject : text
class BaseObject {
}
Scene3 --> "1" BaseObject : urinal
class AudibleObject {
}
Scene3 --> "1" AudibleObject : crack
class AudibleObject {
}
Scene3 --> "1" AudibleObject : oneghost
class AudibleObject {
}
Scene3 --> "1" AudibleObject : faucet
class AudibleObject {
}
Scene3 --> "1" AudibleObject : optionalghost
class AudibleObject {
}
Scene3 --> "1" AudibleObject : tryMe
class FadeEffect {
}
Scene3 --> "1" FadeEffect : fadeOverlay
class BaseScene {
}
BaseScene <|-- Scene3
class Scene5 [[java:scenes.Scene5]] {
	-{static} BG_PATH: String
	-{static} BG_AUDIO_PATH: String[]
	-sceneGuider: int
	-backgrounds: Background[]
	+Scene5()
	-initializeBackgrounds(): void
	#initializeObjects(): void
	-closeObjects(objects: BaseObject[]): void
	#setupEventHandlers(): void
	-transitionProjector(): void
	-transitionMonitor(): void
	-transitionBlackscreen(): void
	-transitionWelcomestupid(): void
	-transitionTimeToHaveFun(): void
	-setupTiesClickEvents(): void
	-runGlitchEffect(): void
	-goToNextScene(): void
	-setupSceneTransition(): void
}
class BaseObject {
}
Scene5 --> "*" BaseObject : ties
class BaseObject {
}
Scene5 --> "*" BaseObject : comsmile
class BaseObject {
}
Scene5 --> "*" BaseObject : projector
class AudibleObject {
}
Scene5 --> "*" AudibleObject : ps
class BaseObject {
}
Scene5 --> "1" BaseObject : keyboard
class BaseObject {
}
Scene5 --> "1" BaseObject : mouse
class AudibleObject {
}
Scene5 --> "1" AudibleObject : blackscreen
class AudibleObject {
}
Scene5 --> "1" AudibleObject : monitor
class AudibleObject {
}
Scene5 --> "1" AudibleObject : timetohavefun
class AudibleObject {
}
Scene5 --> "1" AudibleObject : welcomestupid
class BaseScene {
}
BaseScene <|-- Scene5
class Scene1_1 [[java:scenes.Scene1_1]] {
	-{static} BG_PATH: String
	+Scene1_1()
	+initializeObjects(): void
	+setupEventHandlers(): void
}
class AudibleObject {
}
Scene1_1 --> "1" AudibleObject : building
class AudibleObject {
}
Scene1_1 --> "1" AudibleObject : bushtree
class AudibleObject {
}
Scene1_1 --> "1" AudibleObject : bus
class AudibleObject {
}
Scene1_1 --> "1" AudibleObject : doorofbus
class BaseObject {
}
Scene1_1 --> "1" BaseObject : text
class BaseScene {
}
BaseScene <|-- Scene1_1
class Scene0 [[java:scenes.Scene0]] {
	-{static} BG_PATH: String
	-{static} BG_AUDIO_PATH: String
	-{static} OBJECTS: String[]
	-{static} SOUND_FILES: String[]
	+Scene0()
	+initializeObjects(): void
	+setupEventHandlers(): void
}
class BaseObject {
}
Scene0 --> "1" BaseObject : start
class AudibleObject {
}
Scene0 --> "*" AudibleObject : noisyBackground
class BaseScene {
}
BaseScene <|-- Scene0
class Scene2 [[java:scenes.Scene2]] {
	-{static} BG_PATH: String
	-sceneGuider: int
	-backgroundList: ArrayList<Background>
	+Scene2()
	-initializeBackgrounds(): void
	#initializeObjects(): void
	-createAudibleObject(name: String, sound: String): AudibleObject
	-createBaseObject(name: String): BaseObject
	#setupEventHandlers(): void
	-updateScene(obj: BaseObject, nextState: int, bg: Background, nextObj: BaseObject): void
	-handlePrinterBodyClick(): void
	-handleHiClick(): void
	-handlePaperClick(): void
	-handleSmile1Click(): void
	-handleSmile3Click(): void
}
class BaseObject {
}
Scene2 --> "1" BaseObject : screenReady
class BaseObject {
}
Scene2 --> "1" BaseObject : smile1
class BaseObject {
}
Scene2 --> "1" BaseObject : smile2
class BaseObject {
}
Scene2 --> "1" BaseObject : smile4
class BaseObject {
}
Scene2 --> "1" BaseObject : text
class AudibleObject {
}
Scene2 --> "1" AudibleObject : hi
class AudibleObject {
}
Scene2 --> "1" AudibleObject : cheater
class AudibleObject {
}
Scene2 --> "1" AudibleObject : scanner
class AudibleObject {
}
Scene2 --> "1" AudibleObject : printerBody
class AudibleObject {
}
Scene2 --> "1" AudibleObject : paper
class AudibleObject {
}
Scene2 --> "1" AudibleObject : smile3
class BaseScene {
}
BaseScene <|-- Scene2
class Scene6 [[java:scenes.Scene6]] {
	-sceneGuider: int
	-{static} BG_PATH: String
	-{static} BG_AUDIO_PATH: String
	-backgroundList: ArrayList<Background>
	+Scene6()
	-initializeBackgrounds(): void
	#initializeObjects(): void
	#setupEventHandlers(): void
	-createBaseObject(name: String): BaseObject
	-hideObjects(): void
	-handleThisSceneClick(expect: int): void
	-handleEyeClick(expect: int): void
	-handelAlertClick(expect: int): void
	-handleHalfEyeClick(expect: int): void
	-handleGradeLetterClick(expect: int): void
	-handleLetterAClick(expect: int): void
	-closeAndOpen(toClose: BaseObject, toOpen: BaseObject, begin: int, end: int): void
	-handleHeadClick(expect: int): void
	-screenBlink(): void
	-gradeBlink(): void
	-sceneBlinkGeneral(durationSeconds: int, backgroundIndices: List<Integer>, sleepDurations: int[], finalAction: Runnable): void
	-glitchSoundMaker(): void
}
class BaseObject {
}
Scene6 --> "1" BaseObject : eye
class BaseObject {
}
Scene6 --> "1" BaseObject : alert1
class BaseObject {
}
Scene6 --> "1" BaseObject : alert2
class BaseObject {
}
Scene6 --> "1" BaseObject : attend
class BaseObject {
}
Scene6 --> "1" BaseObject : gradeletter
class BaseObject {
}
Scene6 --> "1" BaseObject : group_mem
class BaseObject {
}
Scene6 --> "1" BaseObject : halfeye
class BaseObject {
}
Scene6 --> "1" BaseObject : head_left
class BaseObject {
}
Scene6 --> "1" BaseObject : head_mid
class BaseObject {
}
Scene6 --> "1" BaseObject : head_right
class BaseObject {
}
Scene6 --> "1" BaseObject : left
class BaseObject {
}
Scene6 --> "1" BaseObject : mid
class BaseObject {
}
Scene6 --> "1" BaseObject : right
class BaseObject {
}
Scene6 --> "1" BaseObject : letterA
class BaseObject {
}
Scene6 --> "1" BaseObject : showrank
class BaseObject {
}
Scene6 --> "1" BaseObject : submission
class BaseScene {
}
BaseScene <|-- Scene6
class Scene4 [[java:scenes.Scene4]] {
	-{static} BG_PATH: String
	-next_background: Background
	-countdownTimeline: Timeline
	-countdownLabel: Label
	-remainingSeconds: int
	-countdownPane: StackPane
	-opened: boolean
	+Scene4()
	#initializeObjects(): void
	#setupEventHandlers(): void
	-startCountdown(seconds: int): void
	-handleTimeout(): void
	-handleCorrectClick(): void
	-transitionToNextScene(): void
	+startTextFade(t: BaseObject, flag: int): void
}
class BaseObject {
}
Scene4 --> "1" BaseObject : text
class BaseObject {
}
Scene4 --> "1" BaseObject : text2
class AudibleObject {
}
Scene4 --> "*" AudibleObject : choice
class AudibleObject {
}
Scene4 --> "1" AudibleObject : door
class BaseScene {
}
BaseScene <|-- Scene4
@enduml